---
title: "Client Report - [Insert Project Title]"
subtitle: "Course DS 250"
author: "[STUDENT NAME]"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import numpy as np
import plotly.express as px
```


## Elevator pitch

_paste your elevator pitch here_
_A SHORT (4-5 SENTENCES) PARAGRAPH THAT `DESCRIBES KEY INSIGHTS` TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS._

```{python}
#| label: project data
#| code-summary: Read and format project data
# Include and execute your code here
df = pd.read_csv("https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv")



```

## QUESTION|TASK 1

__How does your name at your birth year compare to its use historically?__

_In the year 1947 there were only 5 children named Darren. The name started to gain popularity in 1958 with 385 kids given the name and peaking at 5931 children given this name in 1965. From the name starting to gain popularity in 1958 to its peak in 1965 is a 1440.2% increase in popularity over 7 years. After this peak popularity continued to drop until in the year 2015 there 484 kids named Darren.       _

```{python}
#| label: Q1
#| code-summary: Read and format data
# Include and execute your code here
 #and "va != 0"])
# df.query("year <= 2000") 

# year with lowest babies names Darren
# pd.unique(df.query("name == 'Darren' ").year).min()
# pd.unique(df.query("name == 'Darren' ").year).max()

# Gives the size, so rows times columns so with year, how many years you have, name: how many times the specified name occurs. 
# pd.unique(df.query("name == 'Darren' ").year).size
df.query("name == 'Darren'").filter(["name", "year", "Total"]).query("year > 1957 and year < 1966")
```

_The green line indicates the start of when Darren was becoming popular. This shows the rapid increase in popularity over 7 years. _

```{python}
#| label: Q1 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
darren_df = df[df['name'] == 'Darren']
chart = px.bar(darren_df.head(200),
    x="year", 
    y="Total",
    title = "Usage of the name Darren"

)
highlight_year = 1958

# Add a vertical line
chart.add_shape(
    type="line",
    x0=highlight_year,
    y0=darren_df['Total'].min(),
    x1=highlight_year,
    y1=darren_df['Total'].max(),
    line=dict(
        color="green",
        width=3,
        dash="dashdot"
    )
)
chart.show()

```


```{python}
#| label: Q1 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here


# mydat = darren_df.head(1000)\
#     .groupby('year')\
#     .sum()\
#     .reset_index()\
#     .tail(10)\
#     .filter(["year", "AK","AR"])

# display(mydat)

```


## QUESTION|TASK 2

__If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?__

_I would guess they would be born between the years 1985 and 1996.Which would be between the ages of 27 and 38. The reason why I would choose this range of age is because the majority of people named brittany were born in these years. 241847 out of 327718 were born in these years. That is 
73.8% of people named Brittany in a 11 year period.I would not choose any date from 1968 - 1984 and 1997 and 2015 because that is only 26.2 % of people name Brittany were born in these years.  _

```{python}
#| label: Q2
#| code-summary: Read and format data
# Include and execute your code here

df.query("name == 'Brittany'").filter(["name", "year",
 "Total"]).query("year > 1984 and year < 1997")


```

_This is isolating the years that hold over 70% of people named Brittany_

```{python}
#| label: Q2 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
filtered_df = df[df['name'] == 'Brittany']
chart = px.bar(filtered_df.head(200),
    x="year", 
    y="Total",
    title = "Brittany name usage over the years"
)
chart.add_shape(
    type="line",
    x0= 1985,
    y0=14000,
    x1=1996,
    y1=14000,
    line=dict(
        color="red",
        width=3,
        dash="dashdot")
        )
chart.show()
```


```{python}
#| label: Q2 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
mydat = filtered_df.head(1000)\
    .groupby('year')\
    .sum()\
    .reset_index()\
    .tail(10)\
    .filter(["year", "AK","AR"])

display(mydat)

```


## QUESTION|TASK 3

__Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names. What trends do you notice?__

_average, max, 1920 was this # then peaked at (max) this is an %increase and from the max to the min of john fell by this (%)_

```{python}
#| label: Q3
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q3 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
desired_names = ["Mary", "Martha", "Peter", "Paul"]
#List of names I want to see in chart
#isin is boolean check. Is the four names in the column?
# filter_df = df.name.isin(desired_names)
# filter_df = df[df["name"].isin(desired_names)]
filter_df = df[df.name.isin(desired_names)].query("year > 1920 and year < 2000")
#takes filter and query filter_df variable and applies to the chart. 
chart = px.bar(filter_df,
    x="year", 
    y="Total",
    color = "name",
    title = "Comparison of Martha, Mary, Peter and Paul over the years"
)
chart.show()
```


```{python}
#| label: Q3 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here

# Taking instances of each record and adding them together.
mydat = (df
    [df.name.isin(desired_names)]
    .query('year > 1920 and year < 2000')
    .groupby('name')
    .agg(total = ('Total', 'sum'))
    .reset_index()
)

mydat.head(50)



# mydat = filter_df.head(1000)\
#     .groupby('year')\
#     .sum()\
#     .reset_index()\
#     .tail(10)\
#     .filter(["year", "AK","AR"])

# display(mydat)

```
