---
title: "Client Report - [Insert Project Title]"
subtitle: "Course DS 250"
author: "[STUDENT NAME]"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import numpy as np
import plotly.express as px
```


## Elevator pitch

_paste your elevator pitch here_
_A SHORT (4-5 SENTENCES) PARAGRAPH THAT `DESCRIBES KEY INSIGHTS` TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS._

```{python}
#| label: project data
#| code-summary: Read and format project data
# Include and execute your code here
df = pd.read_csv("https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv")



```

__Highlight the Questions and Tasks__

## QUESTION|TASK 1

__How does your name at your birth year compare to its use historically?__

_In 1965 the use of the Name Darren peaked with 5931 kids being named Darren. For the following 5 years there were 4000 - 4500 kids names Darren. After this the name lost some of its popularity and within another 6 years there would only be around 1500 kids named Darren a year. I was born in 1996 and there were 1109 other kids named Darren.  _

```{python}
#| label: Q1
#| code-summary: Read and format data
# Include and execute your code here
 #and "va != 0"])
# df.query("year <= 2000") 

# year with lowest babies names Darren
# pd.unique(df.query("name == 'Darren' ").year).min()
# pd.unique(df.query("name == 'Darren' ").year).max()

# Gives the size, so rows times columns so with year, how many years you have, name: how many times the specified name occurs. 
# pd.unique(df.query("name == 'Darren' ").year).size
df.query("name == 'Darren'").filter(["name", "year","VA","Total"]).query("year > 1960 and year < 2000")
```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q1 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
darren_df = df[df['name'] == 'Darren']
chart = px.bar(darren_df.head(200),
    x="year", 
    y="Total",
    title = "Usage of Darren over the years"

)
chart.show()
```


```{python}
#| label: Q1 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
mydat = darren_df.head(1000)\
    .groupby('year')\
    .sum()\
    .reset_index()\
    .tail(10)\
    .filter(["year", "AK","AR"])

display(mydat)

```


## QUESTION|TASK 2

__If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?__

_I would not guess any ages between 1969 and 1983 20015 - 2006._

```{python}
#| label: Q2
#| code-summary: Read and format data
# Include and execute your code here
df.query("name == 'Brittany'").filter(["name", "year", "Total"])

```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q2 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
filtered_df = df[df['name'] == 'Brittany']
chart = px.bar(filtered_df.head(200),
    x="year", 
    y="Total"
)
chart.show()
```


```{python}
#| label: Q2 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
mydat = filtered_df.head(1000)\
    .groupby('year')\
    .sum()\
    .reset_index()\
    .tail(10)\
    .filter(["year", "AK","AR"])

display(mydat)

```


## QUESTION|TASK 3

__Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names. What trends do you notice?__

_average, max, 1920 was this # then peaked at (max) this is an %increase and from the max to the min of john fell by this (%)_

```{python}
#| label: Q3
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q3 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
desired_names = ["Mary", "Martha", "Peter", "Paul"]
#List of names I want to see in chart
#isin is boolean check. Is the four names in the column?
# filter_df = df.name.isin(desired_names)
# filter_df = df[df["name"].isin(desired_names)]
filter_df = df[df.name.isin(desired_names)].query("year > 1920 and year < 2000")
#takes filter and query filter_df variable and applies to the chart. 
chart = px.bar(filter_df,
    x="year", 
    y="Total",
    color = "name",
    title = "Comparison of Martha, Mary, Peter and Paul over the years"
)
chart.show()
```


```{python}
#| label: Q3 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here

# Taking instances of each record and adding them together.
mydat = (df
    [df.name.isin(desired_names)]
    .query('year > 1920 and year < 2000')
    .groupby('name')
    .agg(total = ('Total', 'sum'))
    .reset_index()
)

mydat.head(50)



# mydat = filter_df.head(1000)\
#     .groupby('year')\
#     .sum()\
#     .reset_index()\
#     .tail(10)\
#     .filter(["year", "AK","AR"])

# display(mydat)

```
